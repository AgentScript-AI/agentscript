/* eslint-disable @typescript-eslint/no-unsafe-function-type */
/* eslint-disable @typescript-eslint/unbound-method */
import { Console } from 'console';

/**
 * Native function type.
 */
export type NativeFunction = Function;

/**
 * Set of allowed native functions and built-ins.
 */
export const ALLOWED_NATIVES = Object.freeze(
    new Set<unknown>([
        Array,
        Array.from,
        Array.isArray,
        Array.prototype.concat,
        Array.prototype.filter,
        Array.prototype.flat,
        Array.prototype.includes,
        Array.prototype.indexOf,
        Array.prototype.lastIndexOf,
        Array.prototype.pop,
        Array.prototype.push,
        Array.prototype.shift,
        Array.prototype.slice,
        Array.prototype.splice,
        Array.prototype.unshift,
        BigInt,
        Boolean,
        Console.prototype.log,
        Date,
        Date.prototype.constructor,
        Date.prototype.getDate,
        Date.prototype.getDay,
        Date.prototype.getFullYear,
        Date.prototype.getHours,
        Date.prototype.getMilliseconds,
        Date.prototype.getMinutes,
        Date.prototype.getMonth,
        Date.prototype.getSeconds,
        Date.prototype.getTime,
        Date.prototype.toDateString,
        Date.prototype.toISOString,
        Date.prototype.toLocaleDateString,
        Date.prototype.toLocaleString,
        Date.prototype.toLocaleTimeString,
        Date.prototype.toTimeString,
        Date.prototype.toUTCString,
        JSON,
        JSON.parse,
        JSON.stringify,
        Map,
        Map.prototype.clear,
        Map.prototype.constructor,
        Map.prototype.delete,
        Map.prototype.entries,
        Map.prototype.get,
        Map.prototype.has,
        Map.prototype.keys,
        Map.prototype.set,
        Map.prototype.values,
        Math,
        Math.abs,
        Math.acos,
        Math.acosh,
        Math.asin,
        Math.asinh,
        Math.atan,
        Math.atan2,
        Math.atan2,
        Math.atanh,
        Math.cbrt,
        Math.ceil,
        Math.clz32,
        Math.cos,
        Math.cosh,
        Math.exp,
        Math.expm1,
        Math.floor,
        Math.fround,
        Math.hypot,
        Math.imul,
        Math.log,
        Math.log10,
        Math.log1p,
        Math.log2,
        Math.max,
        Math.min,
        Math.pow,
        Math.random,
        Math.round,
        Math.sign,
        Math.sin,
        Math.sinh,
        Math.sqrt,
        Math.tan,
        Math.tanh,
        Math.trunc,
        Number,
        Number.prototype.toExponential,
        Number.prototype.toFixed,
        Number.prototype.toPrecision,
        Object,
        Object.entries,
        Object.keys,
        Object.values,
        // todo: make it work safely - potentially allows to assign to global object
        // Object.assign,
        RegExp,
        RegExp.prototype.constructor,
        RegExp.prototype.exec,
        RegExp.prototype.test,
        Set,
        Set.prototype.add,
        Set.prototype.clear,
        Set.prototype.constructor,
        Set.prototype.delete,
        Set.prototype.has,
        String,
        String,
        String.prototype.endsWith,
        String.prototype.includes,
        String.prototype.indexOf,
        String.prototype.lastIndexOf,
        String.prototype.replace,
        String.prototype.replaceAll,
        String.prototype.search,
        String.prototype.slice,
        String.prototype.split,
        String.prototype.startsWith,
        String.prototype.substring,
        String.prototype.toLowerCase,
        String.prototype.toUpperCase,
        String.prototype.trim,
        String.prototype.trimEnd,
        String.prototype.trimStart,
        String.prototype.valueOf,
        console,
        parseFloat,
        parseInt,
    ]),
);
